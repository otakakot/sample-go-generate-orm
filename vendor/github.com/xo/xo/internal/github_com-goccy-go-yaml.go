// Code generated by 'yaegi extract github.com/goccy/go-yaml'. DO NOT EDIT.

package internal

import (
	"context"
	"github.com/goccy/go-yaml"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/goccy/go-yaml/yaml"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CommentFootPosition":            reflect.ValueOf(yaml.CommentFootPosition),
		"CommentHeadPosition":            reflect.ValueOf(yaml.CommentHeadPosition),
		"CommentLinePosition":            reflect.ValueOf(yaml.CommentLinePosition),
		"CommentToMap":                   reflect.ValueOf(yaml.CommentToMap),
		"DefaultIndentSpaces":            reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"DisallowDuplicateKey":           reflect.ValueOf(yaml.DisallowDuplicateKey),
		"DisallowUnknownField":           reflect.ValueOf(yaml.DisallowUnknownField),
		"ErrInvalidCommentMapValue":      reflect.ValueOf(&yaml.ErrInvalidCommentMapValue).Elem(),
		"ErrInvalidPath":                 reflect.ValueOf(&yaml.ErrInvalidPath).Elem(),
		"ErrInvalidPathString":           reflect.ValueOf(&yaml.ErrInvalidPathString).Elem(),
		"ErrInvalidQuery":                reflect.ValueOf(&yaml.ErrInvalidQuery).Elem(),
		"ErrNotFoundNode":                reflect.ValueOf(&yaml.ErrNotFoundNode).Elem(),
		"ErrUnknownCommentPositionType":  reflect.ValueOf(&yaml.ErrUnknownCommentPositionType).Elem(),
		"ErrUnsupportedFootPositionType": reflect.ValueOf(yaml.ErrUnsupportedFootPositionType),
		"ErrUnsupportedHeadPositionType": reflect.ValueOf(yaml.ErrUnsupportedHeadPositionType),
		"ErrUnsupportedLinePositionType": reflect.ValueOf(yaml.ErrUnsupportedLinePositionType),
		"Flow":                           reflect.ValueOf(yaml.Flow),
		"FootComment":                    reflect.ValueOf(yaml.FootComment),
		"FormatError":                    reflect.ValueOf(yaml.FormatError),
		"HeadComment":                    reflect.ValueOf(yaml.HeadComment),
		"Indent":                         reflect.ValueOf(yaml.Indent),
		"IndentSequence":                 reflect.ValueOf(yaml.IndentSequence),
		"IsInvalidAliasNameError":        reflect.ValueOf(yaml.IsInvalidAliasNameError),
		"IsInvalidAnchorNameError":       reflect.ValueOf(yaml.IsInvalidAnchorNameError),
		"IsInvalidPathError":             reflect.ValueOf(yaml.IsInvalidPathError),
		"IsInvalidPathStringError":       reflect.ValueOf(yaml.IsInvalidPathStringError),
		"IsInvalidQueryError":            reflect.ValueOf(yaml.IsInvalidQueryError),
		"IsInvalidTokenTypeError":        reflect.ValueOf(yaml.IsInvalidTokenTypeError),
		"IsNotFoundNodeError":            reflect.ValueOf(yaml.IsNotFoundNodeError),
		"JSON":                           reflect.ValueOf(yaml.JSON),
		"JSONToYAML":                     reflect.ValueOf(yaml.JSONToYAML),
		"LineComment":                    reflect.ValueOf(yaml.LineComment),
		"Marshal":                        reflect.ValueOf(yaml.Marshal),
		"MarshalAnchor":                  reflect.ValueOf(yaml.MarshalAnchor),
		"MarshalContext":                 reflect.ValueOf(yaml.MarshalContext),
		"MarshalWithOptions":             reflect.ValueOf(yaml.MarshalWithOptions),
		"NewDecoder":                     reflect.ValueOf(yaml.NewDecoder),
		"NewEncoder":                     reflect.ValueOf(yaml.NewEncoder),
		"NodeToValue":                    reflect.ValueOf(yaml.NodeToValue),
		"PathString":                     reflect.ValueOf(yaml.PathString),
		"RecursiveDir":                   reflect.ValueOf(yaml.RecursiveDir),
		"ReferenceDirs":                  reflect.ValueOf(yaml.ReferenceDirs),
		"ReferenceFiles":                 reflect.ValueOf(yaml.ReferenceFiles),
		"ReferenceReaders":               reflect.ValueOf(yaml.ReferenceReaders),
		"Strict":                         reflect.ValueOf(yaml.Strict),
		"StructTagName":                  reflect.ValueOf(constant.MakeFromLiteral("\"yaml\"", token.STRING, 0)),
		"Unmarshal":                      reflect.ValueOf(yaml.Unmarshal),
		"UnmarshalContext":               reflect.ValueOf(yaml.UnmarshalContext),
		"UnmarshalWithOptions":           reflect.ValueOf(yaml.UnmarshalWithOptions),
		"UseJSONMarshaler":               reflect.ValueOf(yaml.UseJSONMarshaler),
		"UseJSONUnmarshaler":             reflect.ValueOf(yaml.UseJSONUnmarshaler),
		"UseLiteralStyleIfMultiline":     reflect.ValueOf(yaml.UseLiteralStyleIfMultiline),
		"UseOrderedMap":                  reflect.ValueOf(yaml.UseOrderedMap),
		"UseSingleQuote":                 reflect.ValueOf(yaml.UseSingleQuote),
		"Validator":                      reflect.ValueOf(yaml.Validator),
		"ValueToNode":                    reflect.ValueOf(yaml.ValueToNode),
		"WithComment":                    reflect.ValueOf(yaml.WithComment),
		"YAMLToJSON":                     reflect.ValueOf(yaml.YAMLToJSON),

		// type definitions
		"BytesMarshaler":              reflect.ValueOf((*yaml.BytesMarshaler)(nil)),
		"BytesMarshalerContext":       reflect.ValueOf((*yaml.BytesMarshalerContext)(nil)),
		"BytesUnmarshaler":            reflect.ValueOf((*yaml.BytesUnmarshaler)(nil)),
		"BytesUnmarshalerContext":     reflect.ValueOf((*yaml.BytesUnmarshalerContext)(nil)),
		"Comment":                     reflect.ValueOf((*yaml.Comment)(nil)),
		"CommentMap":                  reflect.ValueOf((*yaml.CommentMap)(nil)),
		"CommentPosition":             reflect.ValueOf((*yaml.CommentPosition)(nil)),
		"DecodeOption":                reflect.ValueOf((*yaml.DecodeOption)(nil)),
		"Decoder":                     reflect.ValueOf((*yaml.Decoder)(nil)),
		"EncodeOption":                reflect.ValueOf((*yaml.EncodeOption)(nil)),
		"Encoder":                     reflect.ValueOf((*yaml.Encoder)(nil)),
		"FieldError":                  reflect.ValueOf((*yaml.FieldError)(nil)),
		"InterfaceMarshaler":          reflect.ValueOf((*yaml.InterfaceMarshaler)(nil)),
		"InterfaceMarshalerContext":   reflect.ValueOf((*yaml.InterfaceMarshalerContext)(nil)),
		"InterfaceUnmarshaler":        reflect.ValueOf((*yaml.InterfaceUnmarshaler)(nil)),
		"InterfaceUnmarshalerContext": reflect.ValueOf((*yaml.InterfaceUnmarshalerContext)(nil)),
		"IsZeroer":                    reflect.ValueOf((*yaml.IsZeroer)(nil)),
		"MapItem":                     reflect.ValueOf((*yaml.MapItem)(nil)),
		"MapSlice":                    reflect.ValueOf((*yaml.MapSlice)(nil)),
		"Path":                        reflect.ValueOf((*yaml.Path)(nil)),
		"PathBuilder":                 reflect.ValueOf((*yaml.PathBuilder)(nil)),
		"StructField":                 reflect.ValueOf((*yaml.StructField)(nil)),
		"StructFieldMap":              reflect.ValueOf((*yaml.StructFieldMap)(nil)),
		"StructValidator":             reflect.ValueOf((*yaml.StructValidator)(nil)),

		// interface wrapper definitions
		"_BytesMarshaler":              reflect.ValueOf((*_github_com_goccy_go_yaml_BytesMarshaler)(nil)),
		"_BytesMarshalerContext":       reflect.ValueOf((*_github_com_goccy_go_yaml_BytesMarshalerContext)(nil)),
		"_BytesUnmarshaler":            reflect.ValueOf((*_github_com_goccy_go_yaml_BytesUnmarshaler)(nil)),
		"_BytesUnmarshalerContext":     reflect.ValueOf((*_github_com_goccy_go_yaml_BytesUnmarshalerContext)(nil)),
		"_FieldError":                  reflect.ValueOf((*_github_com_goccy_go_yaml_FieldError)(nil)),
		"_InterfaceMarshaler":          reflect.ValueOf((*_github_com_goccy_go_yaml_InterfaceMarshaler)(nil)),
		"_InterfaceMarshalerContext":   reflect.ValueOf((*_github_com_goccy_go_yaml_InterfaceMarshalerContext)(nil)),
		"_InterfaceUnmarshaler":        reflect.ValueOf((*_github_com_goccy_go_yaml_InterfaceUnmarshaler)(nil)),
		"_InterfaceUnmarshalerContext": reflect.ValueOf((*_github_com_goccy_go_yaml_InterfaceUnmarshalerContext)(nil)),
		"_IsZeroer":                    reflect.ValueOf((*_github_com_goccy_go_yaml_IsZeroer)(nil)),
		"_StructValidator":             reflect.ValueOf((*_github_com_goccy_go_yaml_StructValidator)(nil)),
	}
}

// _github_com_goccy_go_yaml_BytesMarshaler is an interface wrapper for BytesMarshaler type
type _github_com_goccy_go_yaml_BytesMarshaler struct {
	IValue       interface{}
	WMarshalYAML func() ([]byte, error)
}

func (W _github_com_goccy_go_yaml_BytesMarshaler) MarshalYAML() ([]byte, error) {
	return W.WMarshalYAML()
}

// _github_com_goccy_go_yaml_BytesMarshalerContext is an interface wrapper for BytesMarshalerContext type
type _github_com_goccy_go_yaml_BytesMarshalerContext struct {
	IValue       interface{}
	WMarshalYAML func(a0 context.Context) ([]byte, error)
}

func (W _github_com_goccy_go_yaml_BytesMarshalerContext) MarshalYAML(a0 context.Context) ([]byte, error) {
	return W.WMarshalYAML(a0)
}

// _github_com_goccy_go_yaml_BytesUnmarshaler is an interface wrapper for BytesUnmarshaler type
type _github_com_goccy_go_yaml_BytesUnmarshaler struct {
	IValue         interface{}
	WUnmarshalYAML func(a0 []byte) error
}

func (W _github_com_goccy_go_yaml_BytesUnmarshaler) UnmarshalYAML(a0 []byte) error {
	return W.WUnmarshalYAML(a0)
}

// _github_com_goccy_go_yaml_BytesUnmarshalerContext is an interface wrapper for BytesUnmarshalerContext type
type _github_com_goccy_go_yaml_BytesUnmarshalerContext struct {
	IValue         interface{}
	WUnmarshalYAML func(a0 context.Context, a1 []byte) error
}

func (W _github_com_goccy_go_yaml_BytesUnmarshalerContext) UnmarshalYAML(a0 context.Context, a1 []byte) error {
	return W.WUnmarshalYAML(a0, a1)
}

// _github_com_goccy_go_yaml_FieldError is an interface wrapper for FieldError type
type _github_com_goccy_go_yaml_FieldError struct {
	IValue       interface{}
	WStructField func() string
}

func (W _github_com_goccy_go_yaml_FieldError) StructField() string {
	return W.WStructField()
}

// _github_com_goccy_go_yaml_InterfaceMarshaler is an interface wrapper for InterfaceMarshaler type
type _github_com_goccy_go_yaml_InterfaceMarshaler struct {
	IValue       interface{}
	WMarshalYAML func() (interface{}, error)
}

func (W _github_com_goccy_go_yaml_InterfaceMarshaler) MarshalYAML() (interface{}, error) {
	return W.WMarshalYAML()
}

// _github_com_goccy_go_yaml_InterfaceMarshalerContext is an interface wrapper for InterfaceMarshalerContext type
type _github_com_goccy_go_yaml_InterfaceMarshalerContext struct {
	IValue       interface{}
	WMarshalYAML func(a0 context.Context) (interface{}, error)
}

func (W _github_com_goccy_go_yaml_InterfaceMarshalerContext) MarshalYAML(a0 context.Context) (interface{}, error) {
	return W.WMarshalYAML(a0)
}

// _github_com_goccy_go_yaml_InterfaceUnmarshaler is an interface wrapper for InterfaceUnmarshaler type
type _github_com_goccy_go_yaml_InterfaceUnmarshaler struct {
	IValue         interface{}
	WUnmarshalYAML func(a0 func(interface{}) error) error
}

func (W _github_com_goccy_go_yaml_InterfaceUnmarshaler) UnmarshalYAML(a0 func(interface{}) error) error {
	return W.WUnmarshalYAML(a0)
}

// _github_com_goccy_go_yaml_InterfaceUnmarshalerContext is an interface wrapper for InterfaceUnmarshalerContext type
type _github_com_goccy_go_yaml_InterfaceUnmarshalerContext struct {
	IValue         interface{}
	WUnmarshalYAML func(a0 context.Context, a1 func(interface{}) error) error
}

func (W _github_com_goccy_go_yaml_InterfaceUnmarshalerContext) UnmarshalYAML(a0 context.Context, a1 func(interface{}) error) error {
	return W.WUnmarshalYAML(a0, a1)
}

// _github_com_goccy_go_yaml_IsZeroer is an interface wrapper for IsZeroer type
type _github_com_goccy_go_yaml_IsZeroer struct {
	IValue  interface{}
	WIsZero func() bool
}

func (W _github_com_goccy_go_yaml_IsZeroer) IsZero() bool {
	return W.WIsZero()
}

// _github_com_goccy_go_yaml_StructValidator is an interface wrapper for StructValidator type
type _github_com_goccy_go_yaml_StructValidator struct {
	IValue  interface{}
	WStruct func(a0 interface{}) error
}

func (W _github_com_goccy_go_yaml_StructValidator) Struct(a0 interface{}) error {
	return W.WStruct(a0)
}
