// Code generated by 'yaegi extract github.com/kenshaw/inflector'. DO NOT EDIT.

package internal

import (
	"github.com/kenshaw/inflector"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/kenshaw/inflector/inflector"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Pluralize":    reflect.ValueOf(inflector.Pluralize),
		"RulePlural":   reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"RuleSingular": reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"Singularize":  reflect.ValueOf(inflector.Singularize),

		// type definitions
		"InflectorRule": reflect.ValueOf((*inflector.InflectorRule)(nil)),
		"Rule":          reflect.ValueOf((*inflector.Rule)(nil)),
	}
}
